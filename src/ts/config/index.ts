import {
  PREPROD_API_URL,
  PREPROD_TRUSTVAULT_PUBLIC_KEY_BUFFER,
  PRODUCTION_API_URL,
  PRODUCTION_TRUSTVAULT_PUBLIC_KEY2_BUFFER,
  PRODUCTION_TRUSTVAULT_PUBLIC_KEY3_BUFFER,
  PRODUCTION_TRUSTVAULT_PUBLIC_KEY4_BUFFER,
  PRODUCTION_TRUSTVAULT_PUBLIC_KEY_BUFFER,
  SANDBOX_API_URL,
  SANDBOX_TRUSTVAULT_PUBLIC_KEY_BUFFER,
} from "../static-data";
import { Environment, TrustVaultConfig } from "../types";

export const config: { [key in Environment]: TrustVaultConfig } = {
  production: {
    url: PRODUCTION_API_URL,
    trustVaultPublicKeys: [
      PRODUCTION_TRUSTVAULT_PUBLIC_KEY_BUFFER,
      PRODUCTION_TRUSTVAULT_PUBLIC_KEY2_BUFFER,
      PRODUCTION_TRUSTVAULT_PUBLIC_KEY3_BUFFER,
      PRODUCTION_TRUSTVAULT_PUBLIC_KEY4_BUFFER,
    ],
    trustVaultRecoverersPublicKeys: [
      PRODUCTION_TRUSTVAULT_PUBLIC_KEY_BUFFER,
      PRODUCTION_TRUSTVAULT_PUBLIC_KEY2_BUFFER,
      PRODUCTION_TRUSTVAULT_PUBLIC_KEY3_BUFFER,
      PRODUCTION_TRUSTVAULT_PUBLIC_KEY4_BUFFER,
    ],
    bitcoinNetwork: "bitcoin",
  },
  sandbox: {
    url: SANDBOX_API_URL,
    trustVaultPublicKeys: [SANDBOX_TRUSTVAULT_PUBLIC_KEY_BUFFER],
    trustVaultRecoverersPublicKeys: [SANDBOX_TRUSTVAULT_PUBLIC_KEY_BUFFER],
    bitcoinNetwork: "testnet",
  },
  preprod: {
    url: PREPROD_API_URL,
    trustVaultPublicKeys: [PREPROD_TRUSTVAULT_PUBLIC_KEY_BUFFER],
    trustVaultRecoverersPublicKeys: [PREPROD_TRUSTVAULT_PUBLIC_KEY_BUFFER],
    bitcoinNetwork: "testnet",
  },
};
